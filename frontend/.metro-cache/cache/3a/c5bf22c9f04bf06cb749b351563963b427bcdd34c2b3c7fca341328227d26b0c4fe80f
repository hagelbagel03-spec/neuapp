{"dependencies":[{"name":"./core.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":73,"index":88}}],"key":"mJVVi7YU3vDVLm6ZethtbJGh1KY=","exportNames":["*"]}},{"name":"./PlatformChecker.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":89},"end":{"line":4,"column":54,"index":143}}],"key":"6AA7RQghlqlrd3hVWNoLh/rI420=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.WorkletEventHandler = void 0;\n  var _core = require(_dependencyMap[0], \"./core.js\");\n  var _PlatformChecker = require(_dependencyMap[1], \"./PlatformChecker.js\");\n  const SHOULD_BE_USE_WEB = (0, _PlatformChecker.shouldBeUseWeb)();\n  // In JS implementation (e.g. for web) we don't use Reanimated's\n  // event emitter, therefore we have to handle here\n  // the event that came from React Native and convert it.\n  function jsListener(eventName, handler) {\n    return evt => {\n      handler(Object.assign({}, evt.nativeEvent, {\n        eventName\n      }));\n    };\n  }\n  class WorkletEventHandlerNative {\n    #viewTags;\n    #registrations; // keys are viewTags, values are arrays of registration ID's for each viewTag\n    constructor(worklet, eventNames) {\n      this.worklet = worklet;\n      this.eventNames = eventNames;\n      this.#viewTags = new Set();\n      this.#registrations = new Map();\n    }\n    updateEventHandler(newWorklet, newEvents) {\n      // Update worklet and event names\n      this.worklet = newWorklet;\n      this.eventNames = newEvents;\n\n      // Detach all events\n      this.#registrations.forEach(registrationIDs => {\n        registrationIDs.forEach(id => (0, _core.unregisterEventHandler)(id));\n        // No need to remove registrationIDs from map, since it gets overwritten when attaching\n      });\n\n      // Attach new events with new worklet\n      Array.from(this.#viewTags).forEach(tag => {\n        const newRegistrations = this.eventNames.map(eventName => (0, _core.registerEventHandler)(this.worklet, eventName, tag));\n        this.#registrations.set(tag, newRegistrations);\n      });\n    }\n    registerForEvents(viewTag, fallbackEventName) {\n      this.#viewTags.add(viewTag);\n      const newRegistrations = this.eventNames.map(eventName => (0, _core.registerEventHandler)(this.worklet, eventName, viewTag));\n      this.#registrations.set(viewTag, newRegistrations);\n      if (this.eventNames.length === 0 && fallbackEventName) {\n        const newRegistration = (0, _core.registerEventHandler)(this.worklet, fallbackEventName, viewTag);\n        this.#registrations.set(viewTag, [newRegistration]);\n      }\n    }\n    unregisterFromEvents(viewTag) {\n      this.#viewTags.delete(viewTag);\n      this.#registrations.get(viewTag)?.forEach(id => {\n        (0, _core.unregisterEventHandler)(id);\n      });\n      this.#registrations.delete(viewTag);\n    }\n  }\n  class WorkletEventHandlerWeb {\n    constructor(worklet, eventNames = []) {\n      this.worklet = worklet;\n      this.eventNames = eventNames;\n      this.listeners = {};\n      this.setupWebListeners();\n    }\n    setupWebListeners() {\n      this.listeners = {};\n      this.eventNames.forEach(eventName => {\n        this.listeners[eventName] = jsListener(eventName, this.worklet);\n      });\n    }\n    updateEventHandler(newWorklet, newEvents) {\n      // Update worklet and event names\n      this.worklet = newWorklet;\n      this.eventNames = newEvents;\n      this.setupWebListeners();\n    }\n    registerForEvents(_viewTag, _fallbackEventName) {\n      // noop\n    }\n    unregisterFromEvents(_viewTag) {\n      // noop\n    }\n  }\n  const WorkletEventHandler = exports.WorkletEventHandler = SHOULD_BE_USE_WEB ? WorkletEventHandlerWeb : WorkletEventHandlerNative;\n});","lineCount":91,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"WorkletEventHandler"],[7,29,1,13],[8,2,3,0],[8,6,3,0,"_core"],[8,11,3,0],[8,14,3,0,"require"],[8,21,3,0],[8,22,3,0,"_dependencyMap"],[8,36,3,0],[9,2,4,0],[9,6,4,0,"_PlatformChecker"],[9,22,4,0],[9,25,4,0,"require"],[9,32,4,0],[9,33,4,0,"_dependencyMap"],[9,47,4,0],[10,2,5,0],[10,8,5,6,"SHOULD_BE_USE_WEB"],[10,25,5,23],[10,28,5,26],[10,32,5,26,"shouldBeUseWeb"],[10,63,5,40],[10,65,5,41],[10,66,5,42],[11,2,6,0],[12,2,7,0],[13,2,8,0],[14,2,9,0],[14,11,9,9,"jsListener"],[14,21,9,19,"jsListener"],[14,22,9,20,"eventName"],[14,31,9,29],[14,33,9,31,"handler"],[14,40,9,38],[14,42,9,40],[15,4,10,2],[15,11,10,9,"evt"],[15,14,10,12],[15,18,10,16],[16,6,11,4,"handler"],[16,13,11,11],[16,14,11,11,"Object"],[16,20,11,11],[16,21,11,11,"assign"],[16,27,11,11],[16,32,12,9,"evt"],[16,35,12,12],[16,36,12,13,"nativeEvent"],[16,47,12,24],[17,8,13,6,"eventName"],[18,6,13,15],[18,8,14,5],[18,9,14,6],[19,4,15,2],[19,5,15,3],[20,2,16,0],[21,2,17,0],[21,8,17,6,"WorkletEventHandlerNative"],[21,33,17,31],[21,34,17,32],[22,4,18,2],[22,5,18,3,"viewTags"],[22,13,18,11],[23,4,19,2],[23,5,19,3,"registrations"],[23,18,19,16],[23,19,19,17],[23,20,19,18],[24,4,20,2,"constructor"],[24,15,20,13,"constructor"],[24,16,20,14,"worklet"],[24,23,20,21],[24,25,20,23,"eventNames"],[24,35,20,33],[24,37,20,35],[25,6,21,4],[25,10,21,8],[25,11,21,9,"worklet"],[25,18,21,16],[25,21,21,19,"worklet"],[25,28,21,26],[26,6,22,4],[26,10,22,8],[26,11,22,9,"eventNames"],[26,21,22,19],[26,24,22,22,"eventNames"],[26,34,22,32],[27,6,23,4],[27,10,23,8],[27,11,23,9],[27,12,23,10,"viewTags"],[27,20,23,18],[27,23,23,21],[27,27,23,25,"Set"],[27,30,23,28],[27,31,23,29],[27,32,23,30],[28,6,24,4],[28,10,24,8],[28,11,24,9],[28,12,24,10,"registrations"],[28,25,24,23],[28,28,24,26],[28,32,24,30,"Map"],[28,35,24,33],[28,36,24,34],[28,37,24,35],[29,4,25,2],[30,4,26,2,"updateEventHandler"],[30,22,26,20,"updateEventHandler"],[30,23,26,21,"newWorklet"],[30,33,26,31],[30,35,26,33,"newEvents"],[30,44,26,42],[30,46,26,44],[31,6,27,4],[32,6,28,4],[32,10,28,8],[32,11,28,9,"worklet"],[32,18,28,16],[32,21,28,19,"newWorklet"],[32,31,28,29],[33,6,29,4],[33,10,29,8],[33,11,29,9,"eventNames"],[33,21,29,19],[33,24,29,22,"newEvents"],[33,33,29,31],[35,6,31,4],[36,6,32,4],[36,10,32,8],[36,11,32,9],[36,12,32,10,"registrations"],[36,25,32,23],[36,26,32,24,"forEach"],[36,33,32,31],[36,34,32,32,"registrationIDs"],[36,49,32,47],[36,53,32,51],[37,8,33,6,"registrationIDs"],[37,23,33,21],[37,24,33,22,"forEach"],[37,31,33,29],[37,32,33,30,"id"],[37,34,33,32],[37,38,33,36],[37,42,33,36,"unregisterEventHandler"],[37,70,33,58],[37,72,33,59,"id"],[37,74,33,61],[37,75,33,62],[37,76,33,63],[38,8,34,6],[39,6,35,4],[39,7,35,5],[39,8,35,6],[41,6,37,4],[42,6,38,4,"Array"],[42,11,38,9],[42,12,38,10,"from"],[42,16,38,14],[42,17,38,15],[42,21,38,19],[42,22,38,20],[42,23,38,21,"viewTags"],[42,31,38,29],[42,32,38,30],[42,33,38,31,"forEach"],[42,40,38,38],[42,41,38,39,"tag"],[42,44,38,42],[42,48,38,46],[43,8,39,6],[43,14,39,12,"newRegistrations"],[43,30,39,28],[43,33,39,31],[43,37,39,35],[43,38,39,36,"eventNames"],[43,48,39,46],[43,49,39,47,"map"],[43,52,39,50],[43,53,39,51,"eventName"],[43,62,39,60],[43,66,39,64],[43,70,39,64,"registerEventHandler"],[43,96,39,84],[43,98,39,85],[43,102,39,89],[43,103,39,90,"worklet"],[43,110,39,97],[43,112,39,99,"eventName"],[43,121,39,108],[43,123,39,110,"tag"],[43,126,39,113],[43,127,39,114],[43,128,39,115],[44,8,40,6],[44,12,40,10],[44,13,40,11],[44,14,40,12,"registrations"],[44,27,40,25],[44,28,40,26,"set"],[44,31,40,29],[44,32,40,30,"tag"],[44,35,40,33],[44,37,40,35,"newRegistrations"],[44,53,40,51],[44,54,40,52],[45,6,41,4],[45,7,41,5],[45,8,41,6],[46,4,42,2],[47,4,43,2,"registerForEvents"],[47,21,43,19,"registerForEvents"],[47,22,43,20,"viewTag"],[47,29,43,27],[47,31,43,29,"fallbackEventName"],[47,48,43,46],[47,50,43,48],[48,6,44,4],[48,10,44,8],[48,11,44,9],[48,12,44,10,"viewTags"],[48,20,44,18],[48,21,44,19,"add"],[48,24,44,22],[48,25,44,23,"viewTag"],[48,32,44,30],[48,33,44,31],[49,6,45,4],[49,12,45,10,"newRegistrations"],[49,28,45,26],[49,31,45,29],[49,35,45,33],[49,36,45,34,"eventNames"],[49,46,45,44],[49,47,45,45,"map"],[49,50,45,48],[49,51,45,49,"eventName"],[49,60,45,58],[49,64,45,62],[49,68,45,62,"registerEventHandler"],[49,94,45,82],[49,96,45,83],[49,100,45,87],[49,101,45,88,"worklet"],[49,108,45,95],[49,110,45,97,"eventName"],[49,119,45,106],[49,121,45,108,"viewTag"],[49,128,45,115],[49,129,45,116],[49,130,45,117],[50,6,46,4],[50,10,46,8],[50,11,46,9],[50,12,46,10,"registrations"],[50,25,46,23],[50,26,46,24,"set"],[50,29,46,27],[50,30,46,28,"viewTag"],[50,37,46,35],[50,39,46,37,"newRegistrations"],[50,55,46,53],[50,56,46,54],[51,6,47,4],[51,10,47,8],[51,14,47,12],[51,15,47,13,"eventNames"],[51,25,47,23],[51,26,47,24,"length"],[51,32,47,30],[51,37,47,35],[51,38,47,36],[51,42,47,40,"fallbackEventName"],[51,59,47,57],[51,61,47,59],[52,8,48,6],[52,14,48,12,"newRegistration"],[52,29,48,27],[52,32,48,30],[52,36,48,30,"registerEventHandler"],[52,62,48,50],[52,64,48,51],[52,68,48,55],[52,69,48,56,"worklet"],[52,76,48,63],[52,78,48,65,"fallbackEventName"],[52,95,48,82],[52,97,48,84,"viewTag"],[52,104,48,91],[52,105,48,92],[53,8,49,6],[53,12,49,10],[53,13,49,11],[53,14,49,12,"registrations"],[53,27,49,25],[53,28,49,26,"set"],[53,31,49,29],[53,32,49,30,"viewTag"],[53,39,49,37],[53,41,49,39],[53,42,49,40,"newRegistration"],[53,57,49,55],[53,58,49,56],[53,59,49,57],[54,6,50,4],[55,4,51,2],[56,4,52,2,"unregisterFromEvents"],[56,24,52,22,"unregisterFromEvents"],[56,25,52,23,"viewTag"],[56,32,52,30],[56,34,52,32],[57,6,53,4],[57,10,53,8],[57,11,53,9],[57,12,53,10,"viewTags"],[57,20,53,18],[57,21,53,19,"delete"],[57,27,53,25],[57,28,53,26,"viewTag"],[57,35,53,33],[57,36,53,34],[58,6,54,4],[58,10,54,8],[58,11,54,9],[58,12,54,10,"registrations"],[58,25,54,23],[58,26,54,24,"get"],[58,29,54,27],[58,30,54,28,"viewTag"],[58,37,54,35],[58,38,54,36],[58,40,54,38,"forEach"],[58,47,54,45],[58,48,54,46,"id"],[58,50,54,48],[58,54,54,52],[59,8,55,6],[59,12,55,6,"unregisterEventHandler"],[59,40,55,28],[59,42,55,29,"id"],[59,44,55,31],[59,45,55,32],[60,6,56,4],[60,7,56,5],[60,8,56,6],[61,6,57,4],[61,10,57,8],[61,11,57,9],[61,12,57,10,"registrations"],[61,25,57,23],[61,26,57,24,"delete"],[61,32,57,30],[61,33,57,31,"viewTag"],[61,40,57,38],[61,41,57,39],[62,4,58,2],[63,2,59,0],[64,2,60,0],[64,8,60,6,"WorkletEventHandlerWeb"],[64,30,60,28],[64,31,60,29],[65,4,61,2,"constructor"],[65,15,61,13,"constructor"],[65,16,61,14,"worklet"],[65,23,61,21],[65,25,61,23,"eventNames"],[65,35,61,33],[65,38,61,36],[65,40,61,38],[65,42,61,40],[66,6,62,4],[66,10,62,8],[66,11,62,9,"worklet"],[66,18,62,16],[66,21,62,19,"worklet"],[66,28,62,26],[67,6,63,4],[67,10,63,8],[67,11,63,9,"eventNames"],[67,21,63,19],[67,24,63,22,"eventNames"],[67,34,63,32],[68,6,64,4],[68,10,64,8],[68,11,64,9,"listeners"],[68,20,64,18],[68,23,64,21],[68,24,64,22],[68,25,64,23],[69,6,65,4],[69,10,65,8],[69,11,65,9,"setupWebListeners"],[69,28,65,26],[69,29,65,27],[69,30,65,28],[70,4,66,2],[71,4,67,2,"setupWebListeners"],[71,21,67,19,"setupWebListeners"],[71,22,67,19],[71,24,67,22],[72,6,68,4],[72,10,68,8],[72,11,68,9,"listeners"],[72,20,68,18],[72,23,68,21],[72,24,68,22],[72,25,68,23],[73,6,69,4],[73,10,69,8],[73,11,69,9,"eventNames"],[73,21,69,19],[73,22,69,20,"forEach"],[73,29,69,27],[73,30,69,28,"eventName"],[73,39,69,37],[73,43,69,41],[74,8,70,6],[74,12,70,10],[74,13,70,11,"listeners"],[74,22,70,20],[74,23,70,21,"eventName"],[74,32,70,30],[74,33,70,31],[74,36,70,34,"jsListener"],[74,46,70,44],[74,47,70,45,"eventName"],[74,56,70,54],[74,58,70,56],[74,62,70,60],[74,63,70,61,"worklet"],[74,70,70,68],[74,71,70,69],[75,6,71,4],[75,7,71,5],[75,8,71,6],[76,4,72,2],[77,4,73,2,"updateEventHandler"],[77,22,73,20,"updateEventHandler"],[77,23,73,21,"newWorklet"],[77,33,73,31],[77,35,73,33,"newEvents"],[77,44,73,42],[77,46,73,44],[78,6,74,4],[79,6,75,4],[79,10,75,8],[79,11,75,9,"worklet"],[79,18,75,16],[79,21,75,19,"newWorklet"],[79,31,75,29],[80,6,76,4],[80,10,76,8],[80,11,76,9,"eventNames"],[80,21,76,19],[80,24,76,22,"newEvents"],[80,33,76,31],[81,6,77,4],[81,10,77,8],[81,11,77,9,"setupWebListeners"],[81,28,77,26],[81,29,77,27],[81,30,77,28],[82,4,78,2],[83,4,79,2,"registerForEvents"],[83,21,79,19,"registerForEvents"],[83,22,79,20,"_viewTag"],[83,30,79,28],[83,32,79,30,"_fallbackEventName"],[83,50,79,48],[83,52,79,50],[84,6,80,4],[85,4,80,4],[86,4,82,2,"unregisterFromEvents"],[86,24,82,22,"unregisterFromEvents"],[86,25,82,23,"_viewTag"],[86,33,82,31],[86,35,82,33],[87,6,83,4],[88,4,83,4],[89,2,85,0],[90,2,86,7],[90,8,86,13,"WorkletEventHandler"],[90,27,86,32],[90,30,86,32,"exports"],[90,37,86,32],[90,38,86,32,"WorkletEventHandler"],[90,57,86,32],[90,60,86,35,"SHOULD_BE_USE_WEB"],[90,77,86,52],[90,80,86,55,"WorkletEventHandlerWeb"],[90,102,86,77],[90,105,86,80,"WorkletEventHandlerNative"],[90,130,86,105],[91,0,86,106],[91,3]],"functionMap":{"names":["<global>","jsListener","<anonymous>","WorkletEventHandlerNative","WorkletEventHandlerNative#constructor","WorkletEventHandlerNative#updateEventHandler","forEach$argument_0","registrationIDs.forEach$argument_0","Array.from.forEach$argument_0","eventNames.map$argument_0","WorkletEventHandlerNative#registerForEvents","WorkletEventHandlerNative#unregisterFromEvents","get.forEach$argument_0","WorkletEventHandlerWeb","WorkletEventHandlerWeb#constructor","WorkletEventHandlerWeb#setupWebListeners","eventNames.forEach$argument_0","WorkletEventHandlerWeb#updateEventHandler","WorkletEventHandlerWeb#registerForEvents","WorkletEventHandlerWeb#unregisterFromEvents"],"mappings":"AAA;ACQ;SCC;GDK;CDC;AGC;ECG;GDK;EEC;gCCM;8BCC,gCD;KDE;uCGG;mDCC,+DD;KHE;GFC;EOC;iDDE,mEC;GPM;EQC;8CCE;KDE;GRE;CHC;AaC;ECC;GDK;EEC;4BCE;KDE;GFC;EIC;GJK;EKC;GLE;EMC;GNE;CbC"}},"type":"js/module"}]}